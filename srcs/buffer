void	make_fractale(t_env *fractol)
{
		int i;
		t_env		env[THREAD_NUMBER];
		pthread_t	threads[THREAD_NUMBER];

		i = 0;
		while (i < THREAD_NUMBER)
		{
			ft_memcpy((void *)&env[i], (void *)fractol, sizeof(t_env));
			env[i].y = THREAD_WIDTH * i;
			env[i].y_max = THREAD_WIDTH * (i + 1);
			//printf("env.y_max: %d\n", env[i].y_max);		
			pthread_create(&threads[i], NULL, fractol->id_fractale, &env[i]);
			i++;
		}
		while (i--)
			pthread_join(threads[i], NULL);
		mlx_put_image_to_window(fractol->mlx_ptr, fractol->win_ptr, fractol->img_ptr, 0, 0);	
}
